pipeline{
    agent any
    environment{
        SONAR_HOME = tool "sonar"
    }
    
    stages{
        stage("Code Clone"){
            steps{
                echo "Code Clone Stage"
                git url: "https://github.com/devv31/node-todo-cicd.git", branch: "master"
            }
        }
        stage("SonarQube Analysis"){
            steps{
               withSonarQubeEnv("sonar"){
                   sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=nodetodo -Dsonar.projectKey=nodetodo -X"
               }
            }
        }
        stage("SonarQube Quality Gates"){
            steps{
               timeout(time: 1, unit: "MINUTES"){
                   waitForQualityGate abortPipeline: false
               }
            }
        }
        stage("Code Build & Test"){
            steps{
                echo "Code Build Stage"
                sh "docker build -t node-app:latest ."
            }
        }
        stage("Trivy"){
            steps{
                sh "trivy image node-app"
            }
        }
        stage("Push to Public Docker Hub Repo") {
    steps {
        withCredentials([usernamePassword(credentialsId: "DockerHubCreds", passwordVariable: "dockerPass", usernameVariable: "dockerUser")]) {
            script {
                // Log in to Docker Hub using the credentials injected by Jenkins
                sh "docker login -u ${dockerUser} -p ${dockerPass}"

                // Tag the Docker image
                sh "docker tag node-app:latest ${dockerUser}/node-app:latest"
                
                // Push the Docker image to the public Docker Hub repository
                sh "docker push ${dockerUser}/node-app:latest"
            }
        }
    }
}

        stage("Deploy"){
            steps{
                sh "docker compose down && docker compose up -d"
            }
        }
    }
}
